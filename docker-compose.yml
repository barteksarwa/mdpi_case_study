services:
  postgres:
    image: postgres:15
    restart: always
    container_name: postgres-db
    environment:
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: my_password
      POSTGRES_DB: my_database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U my_user -d my_database"]
      interval: 5s
      timeout: 5s
      retries: 10

  pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pipeline-app
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: my_database
      DB_USER: my_user
      DB_PASSWORD: my_password
    volumes:
      - ./:/app                   
      - ./data:/app/data          
    # Wait a few seconds before starting app to allow DB to boot:
    command: bash -c "sleep 5 && python main.py"
    restart: "no"

  dbt:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dbt-runner
    depends_on:
      - postgres
    volumes:
      - ./dbt:/dbt
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: my_database
      DB_USER: my_user
      DB_PASSWORD: my_password
    entrypoint: ["bash"]
    tty: true

volumes:
  postgres_data: